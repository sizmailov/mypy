from typing import Any

Blue: Any
Green: Any
Magenta: Any
Yellow: Any

def accept_defaulted_enum(color: ConsoleForegroundColor = ...) -> None: ...
def add(arg0: int, arg1: int) -> int: ...

class ConsoleBackgroundColor:
    Blue: Any = ...
    Green: Any = ...
    Magenta: Any = ...
    Yellow: Any = ...
    __entries: Any = ...
    def __init__(self, value: int) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __getstate__(self) -> int: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    def __setstate__(self, state: int) -> None: ...
    @property
    def name(self) -> Any: ...
    @property
    def __doc__(self) -> Any: ...
    @property
    def __members__(self) -> Any: ...

class ConsoleForegroundColor:
    Blue: Any = ...
    Green: Any = ...
    Magenta: Any = ...
    Yellow: Any = ...
    __entries: Any = ...
    def __init__(self, value: int) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __getstate__(self) -> int: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    def __setstate__(self, state: int) -> None: ...
    @property
    def name(self) -> Any: ...
    @property
    def __doc__(self) -> Any: ...
    @property
    def __members__(self) -> Any: ...
